import React, { useState, useEffect } from 'react';
import { 
  Typography, 
  Table, 
  Button, 
  Space, 
  Modal, 
  Form, 
  Input, 
  Select, 
  message, 
  Popconfirm, // –î–ª—è –ø–æ–¥—Ç–≤–µ—Ä–∂–¥–µ–Ω–∏—è —É–¥–∞–ª–µ–Ω–∏—è
  Spin, // –û–±—â–∏–π —Å–ø–∏–Ω–Ω–µ—Ä
  Card,
  Checkbox // –î–æ–±–∞–≤–ª—è–µ–º Checkbox –¥–ª—è is_active
} from 'antd';
import type { ColumnsType } from 'antd/es/table';
import { 
  EditOutlined, 
  DeleteOutlined, 
  PlusOutlined, // –ê–Ω–∞–ª–æ–≥ AddIcon
  ReloadOutlined, // –ê–Ω–∞–ª–æ–≥ RefreshIcon
  SaveOutlined, // –î–ª—è –∫–Ω–æ–ø–∫–∏ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è –≤ –º–æ–¥–∞–ª–∫–µ
  CloseOutlined // –î–ª—è –∫–Ω–æ–ø–∫–∏ –æ—Ç–º–µ–Ω—ã –≤ –º–æ–¥–∞–ª–∫–µ
} from '@ant-design/icons';

import api from '../services/api';
// import { API_URL } from '../config'; // API_URL –ø–æ–∫–∞ –Ω–µ –∏—Å–ø–æ–ª—å–∑—É–µ—Ç—Å—è –Ω–∞–ø—Ä—è–º—É—é

// –¢–∏–ø—ã –¥–∞–Ω–Ω—ã—Ö –¥–ª—è –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π
interface Organization {
  id: number;
  name: string;
  code: string;
  legal_name?: string;
  ckp?: string;
  is_active: boolean;
  created_at: string;
  updated_at: string;
}

const { Title } = Typography;
const { Option } = Select;

const AdminOrganizationsPage: React.FC = () => {
  const [loading, setLoading] = useState(false);
  const [editModalOpen, setEditModalOpen] = useState(false);
  const [currentItem, setCurrentItem] = useState<Partial<Organization> | null>(null);
  const [organizations, setOrganizations] = useState<Organization[]>([]);

  // –ò—Å–ø–æ–ª—å–∑—É–µ–º Form instance –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ñ–æ—Ä–º–æ–π –≤ –º–æ–¥–∞–ª–∫–µ
  const [form] = Form.useForm();

  console.log('üé® AdminOrganizationsPage: –†–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ (Ant Design)');

  // –§—É–Ω–∫—Ü–∏—è –∑–∞–≥—Ä—É–∑–∫–∏ –¥–∞–Ω–Ω—ã—Ö - –ª–æ–≥–∏–∫–∞ —Ç–∞ –∂–µ, –Ω–æ –∏—Å–ø–æ–ª—å–∑—É–µ–º message –¥–ª—è –æ—à–∏–±–æ–∫
  const fetchData = async () => {
    if (loading) return;
    console.log('üì° –ó–∞–≥—Ä—É–∂–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π');
    setLoading(true);
    try {
      const timestamp = new Date().getTime();
      const response = await api.get(`/organizations/?_=${timestamp}`);
      console.log('‚úÖ –î–∞–Ω–Ω—ã–µ –ø–æ–ª—É—á–µ–Ω—ã:', response.data);
      setOrganizations(response.data || []);
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏:', error);
      message.error('–ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –¥–∞–Ω–Ω—ã–µ: ' + (error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
    } finally {
      setLoading(false);
    }
  };

  useEffect(() => {
    console.log('üîÑ –ü–µ—Ä–≤–∞—è –∑–∞–≥—Ä—É–∑–∫–∞ –¥–∞–Ω–Ω—ã—Ö');
    fetchData();
  }, []);

  // --- –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –¥–µ–π—Å—Ç–≤–∏–π --- 

  const handleCreateItem = () => {
    console.log('üéØ –°–æ–∑–¥–∞–Ω–∏–µ –Ω–æ–≤–æ–π –∑–∞–ø–∏—Å–∏');
    setCurrentItem({ is_active: true }); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏—è –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é
    form.resetFields(); // –°–±—Ä–∞—Å—ã–≤–∞–µ–º –ø–æ–ª—è —Ñ–æ—Ä–º—ã
    form.setFieldsValue({ is_active: true }); // –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –∑–Ω–∞—á–µ–Ω–∏–µ –ø–æ —É–º–æ–ª—á–∞–Ω–∏—é –¥–ª—è Select
    setEditModalOpen(true);
  };

  const handleEditItem = (item: Organization) => {
    console.log('üéØ –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–ø–∏—Å–∏:', item);
    setCurrentItem({ ...item });
    form.setFieldsValue({ ...item }); // –ó–∞–ø–æ–ª–Ω—è–µ–º —Ñ–æ—Ä–º—É —Ç–µ–∫—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏
    setEditModalOpen(true);
  };

  // handleDeleteItem —Ç–µ–ø–µ—Ä—å –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –∏–∑ Popconfirm
  const handleDeleteConfirm = async (id: number) => {
    console.log('üóëÔ∏è –£–¥–∞–ª—è–µ–º –∑–∞–ø–∏—Å—å (ID):', id);
    setLoading(true);
    try {
      await api.delete(`/organizations/${id}`);
      message.success('–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —É–¥–∞–ª–µ–Ω–∞');
      fetchData(); // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ –ø–æ—Å–ª–µ —É–¥–∞–ª–µ–Ω–∏—è
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è:', error);
      message.error('–ù–µ —É–¥–∞–ª–æ—Å—å —É–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å: ' + (error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
    } finally {
      setLoading(false);
    }
  };

  const handleRefresh = () => {
    console.log('üéØ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö');
    fetchData();
  };

  // –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ/–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ —Ñ–æ—Ä–º—ã)
  const handleSaveItem = async (values: Omit<Organization, 'id' | 'created_at' | 'updated_at'>) => {
    setLoading(true);
    console.log('üíæ –ù–∞—á–∏–Ω–∞–µ–º —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö', values);
    
    const dataToSend = {
      name: values.name?.trim(),
      code: values.code?.trim(),
      legal_name: values.legal_name?.trim() || null,
      ckp: values.ckp?.trim() || null,
      is_active: Boolean(values.is_active)
    };
    console.log('üì¶ –î–∞–Ω–Ω—ã–µ –¥–ª—è –æ—Ç–ø—Ä–∞–≤–∫–∏:', dataToSend);
    
    try {
      if (currentItem?.id) {
        // –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ
        console.log('üìù –û–±–Ω–æ–≤–ª—è–µ–º –∑–∞–ø–∏—Å—å:', currentItem.id);
        const response = await api.put(`/organizations/${currentItem.id}`, dataToSend);
        console.log('‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (–æ–±–Ω–æ–≤–ª–µ–Ω–∏–µ):', response);
        message.success('–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω–∞');
      } else {
        // –°–æ–∑–¥–∞–Ω–∏–µ
        console.log('‚ûï –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—É—é –∑–∞–ø–∏—Å—å');
        const response = await api.post('/organizations/', dataToSend);
        console.log('‚úÖ –û—Ç–≤–µ—Ç —Å–µ—Ä–≤–µ—Ä–∞ (—Å–æ–∑–¥–∞–Ω–∏–µ):', response);
        message.success('–ó–∞–ø–∏—Å—å —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω–∞');
      }
      setEditModalOpen(false); // –ó–∞–∫—Ä—ã–≤–∞–µ–º –º–æ–¥–∞–ª–∫—É
      fetchData(); // –û–±–Ω–æ–≤–ª—è–µ–º –¥–∞–Ω–Ω—ã–µ
    } catch (error: any) {
      console.error('‚ùå –û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è:', error);
      if (error.response) {
        console.error('üîç –î–µ—Ç–∞–ª–∏ –æ—à–∏–±–∫–∏:', error.response.data);
        message.error(`–û—à–∏–±–∫–∞ —Å–µ—Ä–≤–µ—Ä–∞ ${error.response.status}: ${JSON.stringify(error.response.data)}`);
      } else {
        message.error('–û—à–∏–±–∫–∞ —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è: ' + (error.message || '–ù–µ–∏–∑–≤–µ—Å—Ç–Ω–∞—è –æ—à–∏–±–∫–∞'));
      }
    } finally {
      setLoading(false);
    }
  };

  // --- –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –∫–æ–ª–æ–Ω–æ–∫ –¥–ª—è —Ç–∞–±–ª–∏—Ü—ã Ant Design --- 
  const columns: ColumnsType<Organization> = [
    {
      title: 'ID',
      dataIndex: 'id',
      key: 'id',
      sorter: (a, b) => a.id - b.id,
      width: 80,
    },
    {
      title: '–ù–∞–∑–≤–∞–Ω–∏–µ',
      dataIndex: 'name',
      key: 'name',
      sorter: (a, b) => a.name.localeCompare(b.name),
    },
    {
      title: '–Æ—Ä. –Ω–∞–∑–≤–∞–Ω–∏–µ',
      dataIndex: 'legal_name',
      key: 'legal_name',
    },
    {
      title: '–ö–æ–¥',
      dataIndex: 'code',
      key: 'code',
    },
    {
      title: '–¶–ö–ü',
      dataIndex: 'ckp',
      key: 'ckp',
      render: (ckp) => ckp || '‚Äî',
    },
    {
      title: '–ê–∫—Ç–∏–≤–Ω–∞',
      dataIndex: 'is_active',
      key: 'is_active',
      render: (isActive) => (isActive ? '–î–∞' : '–ù–µ—Ç'),
      filters: [
        { text: '–î–∞', value: true },
        { text: '–ù–µ—Ç', value: false },
      ],
      onFilter: (value, record) => record.is_active === value,
      width: 100,
    },
    {
      title: '–î–µ–π—Å—Ç–≤–∏—è',
      key: 'actions',
      align: 'center',
      width: 120,
      render: (_, record) => (
        <Space size="small">
          <Button 
            type="primary" 
            icon={<EditOutlined />} 
            onClick={() => handleEditItem(record)}
            size="small"
            style={{ boxShadow: 'none' }}
          />
          <Popconfirm
            title="–£–¥–∞–ª–∏—Ç—å –∑–∞–ø–∏—Å—å?"
            description={`–í—ã —É–≤–µ—Ä–µ–Ω—ã, —á—Ç–æ —Ö–æ—Ç–∏—Ç–µ —É–¥–∞–ª–∏—Ç—å "${record.name}"?`}
            onConfirm={() => handleDeleteConfirm(record.id)}
            okText="–î–∞"
            cancelText="–ù–µ—Ç"
            placement="left"
          >
            <Button 
              danger 
              icon={<DeleteOutlined />} 
              size="small"
              loading={loading && currentItem?.id === record.id} // –ü–æ–∫–∞–∑—ã–≤–∞–µ–º —Å–ø–∏–Ω–Ω–µ—Ä —Ç–æ–ª—å–∫–æ –¥–ª—è —É–¥–∞–ª—è–µ–º–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
              style={{ boxShadow: 'none' }}
            />
          </Popconfirm>
        </Space>
      ),
    },
  ];

  // --- –ú–æ–¥–∞–ª—å–Ω–æ–µ –æ–∫–Ω–æ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è/—Å–æ–∑–¥–∞–Ω–∏—è --- 
  const renderEditModal = () => {
    return (
      <Modal
        title={currentItem?.id ? '–†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é' : '–°–æ–∑–¥–∞—Ç—å –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏—é'}
        open={editModalOpen}
        // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ onOk –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å submit —Ñ–æ—Ä–º—ã
        // onOk={() => form.submit()}
        confirmLoading={loading} // –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏ –Ω–∞ –∫–Ω–æ–ø–∫–µ OK
        onCancel={() => setEditModalOpen(false)} // –ó–∞–∫—Ä—ã—Ç–∏–µ –ø–æ –∫–Ω–æ–ø–∫–µ Cancel –∏–ª–∏ –∫—Ä–µ—Å—Ç–∏–∫—É
        // –ö–∞—Å—Ç–æ–º–Ω—ã–π —Ñ—É—Ç–µ—Ä –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∫–Ω–æ–ø–∫–∞–º–∏
        footer={[
          <Button 
            key="back" 
            onClick={() => setEditModalOpen(false)} 
            disabled={loading}
            icon={<CloseOutlined />}
          >
            –û—Ç–º–µ–Ω–∞
          </Button>,
          <Button 
            key="submit" 
            type="primary" 
            loading={loading} 
            onClick={() => form.submit()} // –í—ã–∑—ã–≤–∞–µ–º —Å–∞–±–º–∏—Ç —Ñ–æ—Ä–º—ã –ø–æ –∫–ª–∏–∫—É
            icon={<SaveOutlined />}
          >
            –°–æ—Ö—Ä–∞–Ω–∏—Ç—å
          </Button>,
        ]}
        width={600}
        maskClosable={!loading} // –ó–∞–ø—Ä–µ—â–∞–µ–º –∑–∞–∫—Ä—ã—Ç–∏–µ –∫–ª–∏–∫–æ–º –ø–æ –º–∞—Å–∫–µ –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏
      >
        {/* –û–±–µ—Ä—Ç–∫–∞ Spin –¥–ª—è –±–ª–æ–∫–∏—Ä–æ–≤–∫–∏ —Ñ–æ—Ä–º—ã –≤–æ –≤—Ä–µ–º—è –∑–∞–≥—Ä—É–∑–∫–∏ (–º–æ–∂–Ω–æ –∏ –±–µ–∑ –Ω–µ–µ, —Ç.–∫. –µ—Å—Ç—å confirmLoading) */}
        {/* <Spin spinning={loading}> */}
          <Form 
            form={form} // –ü–µ—Ä–µ–¥–∞–µ–º form instance
            layout="vertical"
            name="organizationForm"
            onFinish={handleSaveItem} // –û–±—Ä–∞–±–æ—Ç—á–∏–∫ —Å–∞–±–º–∏—Ç–∞ —Ñ–æ—Ä–º—ã
            // initialValues —É—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞—é—Ç—Å—è –≤ handleEditItem/handleCreateItem —á–µ—Ä–µ–∑ form.setFieldsValue/resetFields
          >
            <Form.Item
              name="name"
              label="–ù–∞–∑–≤–∞–Ω–∏–µ"
              rules={[{ required: true, message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ!' }]}
            >
              <Input placeholder="–ù–∞–∑–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏" />
            </Form.Item>

            <Form.Item
              name="legal_name"
              label="–Æ—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ"
            >
              <Input placeholder="–ü–æ–ª–Ω–æ–µ —é—Ä–∏–¥–∏—á–µ—Å–∫–æ–µ –Ω–∞–∑–≤–∞–Ω–∏–µ" />
            </Form.Item>

            <Form.Item
              name="code"
              label="–ö–æ–¥"
              rules={[{ required: true, message: '–ü–æ–∂–∞–ª—É–π—Å—Ç–∞, –≤–≤–µ–¥–∏—Ç–µ –∫–æ–¥!' }]}
            >
              <Input placeholder="–£–Ω–∏–∫–∞–ª—å–Ω—ã–π –∫–æ–¥ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–∏" />
            </Form.Item>

            <Form.Item
              name="ckp"
              label="–¶–ö–ü"
            >
              <Input placeholder="–¶–µ–Ω—Ç—Ä –∫–æ–ª–ª–µ–∫—Ç–∏–≤–Ω–æ–≥–æ –ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è (–µ—Å–ª–∏ –µ—Å—Ç—å)" />
            </Form.Item>
            
            {/* –ò—Å–ø–æ–ª—å–∑—É–µ–º Checkbox –≤–º–µ—Å—Ç–æ Select –¥–ª—è –±—É–ª–µ–≤–∞ –∑–Ω–∞—á–µ–Ω–∏—è */}
            <Form.Item
              name="is_active"
              valuePropName="checked" // –í–∞–∂–Ω–æ –¥–ª—è Checkbox
              label="–°—Ç–∞—Ç—É—Å"
            >
              <Checkbox>–ê–∫—Ç–∏–≤–Ω–∞</Checkbox>
            </Form.Item>
            
          </Form>
        {/* </Spin> */}
      </Modal>
    );
  };

  // --- –†–µ–Ω–¥–µ—Ä –∫–æ–º–ø–æ–Ω–µ–Ω—Ç–∞ --- 
  return (
    // –ó–∞–º–µ–Ω—è–µ–º Container –Ω–∞ div –∏–ª–∏ Card
    <div style={{ padding: '24px' }}> 
      <Title level={3}>–ê–¥–º–∏–Ω–∏—Å—Ç—Ä–∏—Ä–æ–≤–∞–Ω–∏–µ –æ—Ä–≥–∞–Ω–∏–∑–∞—Ü–∏–π</Title>
      
      <Space style={{ marginBottom: 16 }}>
        <Button 
          type="primary" 
          icon={<PlusOutlined />} 
          onClick={handleCreateItem}
          loading={loading} // –ú–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –æ–±—â–∏–π —Å–ø–∏–Ω–Ω–µ—Ä
        >
          –°–æ–∑–¥–∞—Ç—å
        </Button>
        <Button 
          icon={<ReloadOutlined />} 
          onClick={handleRefresh}
          loading={loading}
        >
          –û–±–Ω–æ–≤–∏—Ç—å
        </Button>
      </Space>
      
      {/* –û–±–æ—Ä–∞—á–∏–≤–∞–µ–º —Ç–∞–±–ª–∏—Ü—É –≤ Card –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–≥–æ —Å—Ö–æ–¥—Å—Ç–≤–∞ —Å Paper */}
      <Card variant="borderless" style={{ boxShadow: 'none', backgroundColor: '#1A1A20' }}>
        <Table 
          columns={columns} 
          dataSource={organizations} 
          rowKey="id" 
          loading={loading}
          pagination={{ pageSize: 10 }} // –ü—Ä–∏–º–µ—Ä –ø–∞–≥–∏–Ω–∞—Ü–∏–∏
          scroll={{ x: 'max-content' }} // –ì–æ—Ä–∏–∑–æ–Ω—Ç–∞–ª—å–Ω—ã–π —Å–∫—Ä–æ–ª–ª –ø—Ä–∏ –Ω–µ–æ–±—Ö–æ–¥–∏–º–æ—Å—Ç–∏
          style={{ background: 'transparent' }}
          className="clean-table" // –î–æ–±–∞–≤–ª—è–µ–º —Å–ø–µ—Ü–∏–∞–ª—å–Ω—ã–π –∫–ª–∞—Å—Å
        />
      </Card>

      {/* –í—ã–∑—ã–≤–∞–µ–º —Ä–µ–Ω–¥–µ—Ä –º–æ–¥–∞–ª—å–Ω–æ–≥–æ –æ–∫–Ω–∞ */} 
      {renderEditModal()}

      {/* –£–±–∏—Ä–∞–µ–º Snackbar, –∏—Å–ø–æ–ª—å–∑—É–µ–º message API */}
      {/* ... Snackbar ... */}
    </div>
  );
};

export default AdminOrganizationsPage; 