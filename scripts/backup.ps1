# –°–∫—Ä–∏–ø—Ç –¥–ª—è –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–≥–æ –±—ç–∫–∞–ø–∞ –ø—Ä–æ–µ–∫—Ç–∞ OFS Global
# –ó–∞–ø—É—Å–∫–∞—Ç—å –∏–∑ –∫–æ—Ä–Ω—è –ø—Ä–æ–µ–∫—Ç–∞ –∫–æ–º–∞–Ω–¥–æ–π: .\scripts\backup.ps1

$ErrorActionPreference = "Stop"

# –ù–∞—Å—Ç—Ä–æ–π–∫–∏ –±—ç–∫–∞–ø–∞
$projectRoot = $PSScriptRoot | Split-Path -Parent
$timestamp = Get-Date -Format "yyyy-MM-dd_HH-mm"
$backupName = "ofs_global_backup_$timestamp"
$backupDir = "D:\OFS_Global\backups"
$backupPath = Join-Path -Path $backupDir -ChildPath "$backupName.zip"

# –ü–∞–ø–∫–∏ –∏ —Ñ–∞–π–ª—ã –¥–ª—è –∏—Å–∫–ª—é—á–µ–Ω–∏—è –∏–∑ –±—ç–∫–∞–ø–∞
$excludeItems = @(
    "node_modules",
    "venv",
    "__pycache__",
    "*.pyc",
    ".git",
    ".env",
    "*.log",
    "dist",
    "build",
    "*.db"
)

# –°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–∞–ø–æ–≤, –µ—Å–ª–∏ –µ—ë –Ω–µ—Ç
if (-not (Test-Path -Path $backupDir)) {
    Write-Host "–°–æ–∑–¥–∞—ë–º –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è –±—ç–∫–∞–ø–æ–≤: $backupDir" -ForegroundColor Yellow
    New-Item -Path $backupDir -ItemType Directory -Force | Out-Null
}

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –≤—ã–≤–æ–¥–∞ —Å–æ–æ–±—â–µ–Ω–∏–π —Å —Ü–≤–µ—Ç–æ–º
function Write-ColorMessage {
    param (
        [string]$Message,
        [string]$Color = "White"
    )
    Write-Host $Message -ForegroundColor $Color
}

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ PowerShell 5.0+ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Compress-Archive
$psVersion = $PSVersionTable.PSVersion
if ($psVersion.Major -lt 5) {
    Write-ColorMessage "–¢—Ä–µ–±—É–µ—Ç—Å—è PowerShell 5.0 –∏–ª–∏ –≤—ã—à–µ –¥–ª—è –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è Compress-Archive." "Red"
    Write-ColorMessage "–¢–µ–∫—É—â–∞—è –≤–µ—Ä—Å–∏—è PowerShell: $($psVersion.ToString())" "Red"
    exit 1
}

# –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å –±—ç–∫–∞–ø–∞
Write-ColorMessage "üîÑ –ù–∞—á–∏–Ω–∞–µ–º –ø—Ä–æ—Ü–µ—Å—Å —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞..." "Cyan"
Write-ColorMessage "üìÇ –ö–æ—Ä–µ–Ω—å –ø—Ä–æ–µ–∫—Ç–∞: $projectRoot" "Gray"
Write-ColorMessage "üìÖ –í—Ä–µ–º–µ–Ω–Ω–∞—è –º–µ—Ç–∫–∞: $timestamp" "Gray"
Write-ColorMessage "üì¶ –§–∞–π–ª –±—ç–∫–∞–ø–∞ –±—É–¥–µ—Ç —Å–æ–∑–¥–∞–Ω: $backupPath" "Gray"

# –°–æ–∑–¥–∞—ë–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é –¥–ª—è —Å–±–æ—Ä–∞ —Ñ–∞–π–ª–æ–≤
$tempDir = Join-Path -Path $env:TEMP -ChildPath "ofs_backup_temp_$timestamp"
if (Test-Path -Path $tempDir) {
    Remove-Item -Path $tempDir -Recurse -Force
}
New-Item -Path $tempDir -ItemType Directory -Force | Out-Null

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –±—ç–∫–∞–ø–∞ —Å –ø—Ä–æ–≥—Ä–µ—Å—Å–æ–º
function Backup-Project {
    param (
        [string]$SourcePath,
        [string]$TempPath,
        [array]$ExcludeList
    )
    
    Write-ColorMessage "üîç –ö–æ–ø–∏—Ä—É–µ–º —Ñ–∞–π–ª—ã –ø—Ä–æ–µ–∫—Ç–∞ –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥..." "Yellow"
    
    # –ü–æ–¥–≥–æ—Ç–∞–≤–ª–∏–≤–∞–µ–º —Å–ø–∏—Å–æ–∫ –∏—Å–∫–ª—é—á–µ–Ω–∏–π –¥–ª—è robocopy
    $excludeParams = @()
    foreach ($item in $ExcludeList) {
        if ($item -like "*.*") {
            # –î–ª—è —Ñ–∞–π–ª–æ–≤ –∏—Å–ø–æ–ª—å–∑—É–µ–º /XF
            $excludeParams += "/XF"
            $excludeParams += $item
        } 
        else {
            # –î–ª—è –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–π –∏—Å–ø–æ–ª—å–∑—É–µ–º /XD
            $excludeParams += "/XD"
            $excludeParams += $item
        }
    }
    
    # –ò—Å–ø–æ–ª—å–∑—É–µ–º robocopy –¥–ª—è –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏—è —Ñ–∞–π–ª–æ–≤ —Å –∏—Å–∫–ª—é—á–µ–Ω–∏—è–º–∏
    $robocopyArgs = @(
        "`"$SourcePath`"",
        "`"$TempPath`"",
        "/E",
        "/NP",
        "/NFL",
        "/NDL",
        "/MT:8"
    ) + $excludeParams
    
    # –í—ã–ø–æ–ª–Ω—è–µ–º robocopy
    $robocopyProcess = Start-Process -FilePath "robocopy" -ArgumentList $robocopyArgs -NoNewWindow -PassThru -Wait
    
    # Robocopy –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Å–ø–µ—Ü–∏—Ñ–∏—á–µ—Å–∫–∏–µ –∫–æ–¥—ã –∑–∞–≤–µ—Ä—à–µ–Ω–∏—è, 0-7 —Å—á–∏—Ç–∞—é—Ç—Å—è —É—Å–ø–µ—à–Ω—ã–º–∏
    if ($robocopyProcess.ExitCode -ge 8) {
        Write-ColorMessage "‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∫–æ–ø–∏—Ä–æ–≤–∞–Ω–∏–∏ —Ñ–∞–π–ª–æ–≤!" "Red"
        return $false
    }
    
    Write-ColorMessage "‚úÖ –§–∞–π–ª—ã —É—Å–ø–µ—à–Ω–æ —Å–∫–æ–ø–∏—Ä–æ–≤–∞–Ω—ã –≤–æ –≤—Ä–µ–º–µ–Ω–Ω—ã–π –∫–∞—Ç–∞–ª–æ–≥." "Green"
    return $true
}

# –°–æ–∑–¥–∞—ë–º –±—ç–∫–∞–ø
try {
    $backupResult = Backup-Project -SourcePath $projectRoot -TempPath $tempDir -ExcludeList $excludeItems
    
    if ($backupResult) {
        Write-ColorMessage "üì¶ –°–æ–∑–¥–∞—ë–º –∞—Ä—Ö–∏–≤..." "Yellow"
        Compress-Archive -Path "$tempDir\*" -DestinationPath $backupPath -Force
        
        Write-ColorMessage "‚úÖ –ë—ç–∫–∞–ø —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω: $backupPath" "Green"
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ä–∞–∑–º–µ—Ä–µ –±—ç–∫–∞–ø–∞
        $backupSize = (Get-Item -Path $backupPath).Length / 1MB
        Write-ColorMessage "üìä –†–∞–∑–º–µ—Ä –±—ç–∫–∞–ø–∞: $([math]::Round($backupSize, 2)) –ú–ë" "Cyan"
        
        # –í—ã–≤–æ–¥–∏–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö –±—ç–∫–∞–ø–∞—Ö
        Write-ColorMessage "`nüìú –ü–æ—Å–ª–µ–¥–Ω–∏–µ 5 –±—ç–∫–∞–ø–æ–≤:" "Magenta"
        Get-ChildItem -Path $backupDir -Filter "*.zip" | 
            Sort-Object LastWriteTime -Descending | 
            Select-Object -First 5 | 
            Format-Table @{L='–ò–º—è';E={$_.Name}}, @{L='–î–∞—Ç–∞';E={$_.LastWriteTime}}, @{L='–†–∞–∑–º–µ—Ä (–ú–ë)';E={"{0:N2}" -f ($_.Length / 1MB)}}
    }
}
catch {
    Write-ColorMessage "‚ùå –ü—Ä–æ–∏–∑–æ—à–ª–∞ –æ—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ –±—ç–∫–∞–ø–∞:" "Red"
    Write-ColorMessage $_.Exception.Message "Red"
    exit 1
}
finally {
    # –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é
    if (Test-Path -Path $tempDir) {
        Write-ColorMessage "üßπ –£–¥–∞–ª—è–µ–º –≤—Ä–µ–º–µ–Ω–Ω—É—é –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏—é..." "Gray"
        Remove-Item -Path $tempDir -Recurse -Force
    }
}

Write-ColorMessage "`n‚ú® –ë—ç–∫–∞–ø –ø—Ä–æ–µ–∫—Ç–∞ OFS Global —É—Å–ø–µ—à–Ω–æ –∑–∞–≤–µ—Ä—à—ë–Ω!" "Green" 