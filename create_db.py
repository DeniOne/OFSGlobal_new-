"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è —Å–æ–∑–¥–∞–Ω–∏—è –≤—Å–µ—Ö —Ç–∞–±–ª–∏—Ü –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö –Ω–∞–ø—Ä—è–º—É—é.
"""
import os
import psycopg2
import time
from sqlalchemy import create_engine, MetaData, Table, Column, Integer, String, ForeignKey, Boolean, Text, DateTime, func
from dotenv import load_dotenv

# –ó–∞–≥—Ä—É–∑–∫–∞ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è
load_dotenv()

# –ü–∞—Ä–∞–º–µ—Ç—Ä—ã –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è –∫ –ë–î
DB_PARAMS = {
    'dbname': os.getenv('DB_NAME', 'ofs_db_new'),
    'user': os.getenv('DB_USER', 'postgres'),
    'password': os.getenv('DB_PASSWORD', ''),
    'host': os.getenv('DB_HOST', 'localhost')
}

# –°—Ç—Ä–æ–∫–∞ –ø–æ–¥–∫–ª—é—á–µ–Ω–∏—è SQLAlchemy
DB_URI = f"postgresql://{DB_PARAMS['user']}:{DB_PARAMS['password']}@{DB_PARAMS['host']}/{DB_PARAMS['dbname']}"

def create_tables():
    """–°–æ–∑–¥–∞–µ—Ç –≤—Å–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ —Ç–∞–±–ª–∏—Ü—ã –≤ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö."""
    
    # –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –ë–î
    print(f"üîÑ –ü–æ–¥–∫–ª—é—á–∞–µ–º—Å—è –∫ –±–∞–∑–µ –¥–∞–Ω–Ω—ã—Ö {DB_PARAMS['dbname']}...")
    engine = create_engine(DB_URI)
    
    try:
        # –°–æ–∑–¥–∞–µ–º –º–µ—Ç–∞–¥–∞–Ω–Ω—ã–µ
        metadata = MetaData()
        
        # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ç–∞–±–ª–∏—Ü—ã
        print("üìù –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Å—Ö–µ–º—É —Ç–∞–±–ª–∏—Ü...")
        
        # –¢–∞–±–ª–∏—Ü–∞ organizations
        organizations = Table(
            'organizations', metadata,
            Column('id', Integer, primary_key=True, index=True),
            Column('name', String(255), nullable=False, index=True),
            Column('legal_name', String(255)),
            Column('description', Text),
            Column('code', String(50)),
            Column('org_type', String(50), nullable=False),
            Column('is_active', Boolean, default=True),
            Column('created_at', DateTime, default=func.now()),
            Column('updated_at', DateTime, default=func.now(), onupdate=func.now()),
            Column('ckp', String(500))
        )
        
        # –¢–∞–±–ª–∏—Ü–∞ divisions (–ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è)
        divisions = Table(
            'divisions', metadata,
            Column('id', Integer, primary_key=True, index=True),
            Column('name', String(255), nullable=False, index=True),
            Column('organization_id', Integer, ForeignKey('organizations.id')),
            Column('parent_id', Integer, ForeignKey('divisions.id')),
            Column('code', String(50)),
            Column('is_active', Boolean, default=True),
            Column('created_at', DateTime, default=func.now()),
            Column('updated_at', DateTime, default=func.now(), onupdate=func.now()),
            Column('ckp', String(500))
        )
        
        # –¢–∞–±–ª–∏—Ü–∞ positions (–¥–æ–ª–∂–Ω–æ—Å—Ç–∏)
        positions = Table(
            'positions', metadata,
            Column('id', Integer, primary_key=True, index=True),
            Column('name', String(255), nullable=False, index=True),
            Column('description', Text),
            Column('is_active', Boolean, default=True),
            Column('created_at', DateTime, default=func.now()),
            Column('updated_at', DateTime, default=func.now(), onupdate=func.now())
        )
        
        # –¢–∞–±–ª–∏—Ü–∞ staff (—Å–æ—Ç—Ä—É–¥–Ω–∏–∫–∏)
        staff = Table(
            'staff', metadata,
            Column('id', Integer, primary_key=True, index=True),
            Column('first_name', String(255), nullable=False),
            Column('last_name', String(255), nullable=False),
            Column('middle_name', String(255)),
            Column('email', String(255), unique=True, index=True),
            Column('phone', String(50)),
            Column('division_id', Integer, ForeignKey('divisions.id')),
            Column('position_id', Integer, ForeignKey('positions.id')),
            Column('manager_id', Integer, ForeignKey('staff.id')),
            Column('photo_url', String(500)),
            Column('is_active', Boolean, default=True),
            Column('created_at', DateTime, default=func.now()),
            Column('updated_at', DateTime, default=func.now(), onupdate=func.now())
        )
        
        # –¢–∞–±–ª–∏—Ü–∞ functional_relations (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω—ã–µ –æ—Ç–Ω–æ—à–µ–Ω–∏—è)
        functional_relations = Table(
            'functional_relations', metadata,
            Column('id', Integer, primary_key=True, index=True),
            Column('manager_id', Integer, ForeignKey('staff.id'), nullable=False),
            Column('subordinate_id', Integer, ForeignKey('staff.id'), nullable=False),
            Column('relation_type', String(50), index=True),
            Column('description', Text),
            Column('is_active', Boolean, default=True),
            Column('created_at', DateTime, default=func.now()),
            Column('updated_at', DateTime, default=func.now(), onupdate=func.now())
        )
        
        # –¢–∞–±–ª–∏—Ü–∞ sections (–æ—Ç–¥–µ–ª—ã)
        sections = Table(
            'sections', metadata,
            Column('id', Integer, primary_key=True, index=True),
            Column('name', String(255), nullable=False, index=True),
            Column('division_id', Integer, ForeignKey('divisions.id')),
            Column('code', String(50)),
            Column('is_active', Boolean, default=True),
            Column('created_at', DateTime, default=func.now()),
            Column('updated_at', DateTime, default=func.now(), onupdate=func.now()),
            Column('ckp', String(500))
        )
        
        # –¢–∞–±–ª–∏—Ü–∞ functions (—Ñ—É–Ω–∫—Ü–∏–∏)
        functions = Table(
            'functions', metadata,
            Column('id', Integer, primary_key=True, index=True),
            Column('name', String(255), nullable=False, index=True),
            Column('section_id', Integer, ForeignKey('sections.id')),
            Column('is_active', Boolean, default=True),
            Column('created_at', DateTime, default=func.now()),
            Column('updated_at', DateTime, default=func.now(), onupdate=func.now()),
            Column('ckp', String(500))
        )
        
        # –¢–∞–±–ª–∏—Ü–∞ staff_functions (—Å–≤—è–∑—å —Å–æ—Ç—Ä—É–¥–Ω–∏–∫–æ–≤ —Å —Ñ—É–Ω–∫—Ü–∏—è–º–∏)
        staff_functions = Table(
            'staff_functions', metadata,
            Column('id', Integer, primary_key=True, index=True),
            Column('staff_id', Integer, ForeignKey('staff.id'), nullable=False),
            Column('function_id', Integer, ForeignKey('functions.id'), nullable=False),
            Column('is_primary', Boolean, default=False),
            Column('is_active', Boolean, default=True),
            Column('created_at', DateTime, default=func.now()),
            Column('updated_at', DateTime, default=func.now(), onupdate=func.now())
        )
        
        # –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã –µ—Å–ª–∏ –æ–Ω–∏ –µ—Å—Ç—å
        print("üóëÔ∏è –£–¥–∞–ª—è–µ–º —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —Ç–∞–±–ª–∏—Ü—ã...")
        metadata.drop_all(engine)
        
        # –°–æ–∑–¥–∞–µ–º —Ç–∞–±–ª–∏—Ü—ã
        print("üèóÔ∏è –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–µ —Ç–∞–±–ª–∏—Ü—ã...")
        metadata.create_all(engine)
        
        print("‚úÖ –í—Å–µ —Ç–∞–±–ª–∏—Ü—ã —É—Å–ø–µ—à–Ω–æ —Å–æ–∑–¥–∞–Ω—ã!")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ —Å–æ–∑–¥–∞–Ω–∏–∏ —Ç–∞–±–ª–∏—Ü: {e}")
    finally:
        engine.dispose()

if __name__ == "__main__":
    create_tables() 